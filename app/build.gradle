import com.android.build.OutputFile
import Utils
import AndroidUtils

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'groovyx.grooid.groovy-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'
apply plugin: 'hugo'

def buildCounter = Integer.getInteger('build.counter', 0)
def signProperties = Utils.rootProperties('.sign/sign.properties')

android {
    defaultConfig {
        applicationId 'com.dmi.perfectreader'
        versionName rootProject.version.toString()
    }

    if (signProperties != null) {
        signingConfigs {
            main {
                storeFile new File(rootProject.projectDir, '.sign/' + signProperties['store.file'])
                storePassword signProperties['store.password']
                keyAlias signProperties['key.alias']
                keyPassword signProperties['key.password']
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled true
            signingConfig signProperties ? signingConfigs.main : null
            proguardFiles 'proguard-android.pro', 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signProperties ? signingConfigs.main : null
            proguardFiles 'proguard-android.pro', 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'mips', 'x86'
        }
    }

    // Each APK must have a different version code
    // (see "Rules for multiple APKs" at http://developer.android.com/intl/ru/google/play/publishing/multiple-apks.html)
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def buildNumber = buildCounter
            def abi = output.getFilter(OutputFile.ABI)
            output.versionCodeOverride = AndroidUtils.computeVersionCode(buildNumber, abi)
        }
    }
}

configurations {
    apt
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName variant.applicationId
        logFile "$project.buildDir/outputs/logs/androidannotations.log"
    }
}

dependencies {
    compile project(':lib:android:discreteSeekBar')
    compile project(':lib:android:materialWidget')
    compile project(':lib:android:readiumSdk')
    compile project(':util:android')
    compile project(':core')
    compile project(':typoweb')
    apt 'org.androidannotations:androidannotations:3.3.1'
}

ext {
    archivesBaseName = rootProject.name + '-' + rootProject.version + '-b' + buildCounter
}
