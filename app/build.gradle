apply plugin: "android-sdk-manager"
apply plugin: "android-sdk-manager"
apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"

android {
    compileSdkVersion projectVersions.compileSdk
    buildToolsVersion projectVersions.buildTools

    defaultConfig {
        applicationId "com.dmi.perfectreader"
        versionName Utils.versionNameFromGit(rootProject.projectDir)
        versionCode Utils.versionCodeFromGit(rootProject.projectDir)
        setProperty("archivesBaseName", "$rootProject.name-$versionName-rev$versionCode")

        minSdkVersion projectVersions.minSdk
        targetSdkVersion projectVersions.targetSdk
    }

    if (config["sign.enabled"]) {
        signingConfigs {
            main {
                storeFile new File(rootProject.projectDir, ".sign/" + config["sign.store.file"])
                storePassword config["sign.store.password"]
                keyAlias config["sign.key.alias"]
                keyPassword config["sign.key.password"]
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled true
            signingConfig config["sign.enabled"] ? signingConfigs.main : null
            proguardFiles "proguard-android.pro", "proguard-project.pro"
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig config["sign.enabled"] ? signingConfigs.main : null
            proguardFiles "proguard-android-optimize.pro", "proguard-project.pro"
        }
    }

    sourceSets {
        debug.java.srcDirs += "src/debug/kotlin"
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    aaptOptions {
        ignoreAssetsPattern "!.readme"
    }
}

dependencies {
    compile project(":util:util-android")
    testCompile project(":util:util-testCommon")
}
