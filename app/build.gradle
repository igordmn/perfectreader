apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'hugo'

android {
    compileSdkVersion projectVersions.compileSdk
    buildToolsVersion projectVersions.buildTools

    defaultConfig {
        applicationId 'com.dmi.perfectreader'
        versionName versionNameFromGit(rootProject.projectDir)
        versionCode versionCodeFromGit(rootProject.projectDir)
        setProperty('archivesBaseName', "$rootProject.name-$versionName")

        minSdkVersion projectVersions.minSdk
        targetSdkVersion projectVersions.targetSdk

        vectorDrawables.useSupportLibrary = true
    }

    if (config['sign.enabled']) {
        signingConfigs {
            main {
                storeFile new File(rootProject.projectDir, '.sign/' + config['sign.store.file'])
                storePassword config['sign.store.password']
                keyAlias config['sign.key.alias']
                keyPassword config['sign.key.password']
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig config['sign.enabled'] ? signingConfigs.main : null
        }
        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig config['sign.enabled'] ? signingConfigs.main : null
            proguardFiles 'proguard.pro'
            testProguardFiles 'proguard.pro'
        }
    }

    sourceSets {
        debug.java.srcDirs += 'src/debug/kotlin'
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    aaptOptions {
        ignoreAssetsPattern '!.readme'
    }

    lintOptions {
        disable 'ViewConstructor'
    }

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    compile project(':util:util-common')
    compile project(':util:util-android')

    compile 'com.github.Turbo87.hugo:hugo-annotations:1.2.2'

    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude module: 'support-annotations'
    }

    androidTestCompile project(':util:util-testCommon')
    testCompile project(':util:util-testCommon')
    testCompile 'junit:junit:4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}