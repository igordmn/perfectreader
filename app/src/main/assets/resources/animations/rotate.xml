<?xml version="1.0" encoding="utf-8"?>
<animation version="1.0">

    <vertex_shader><![CDATA[

        precision mediump float;

        const float PI = 3.141592653589793;

        attribute vec2 pr_position;
        attribute vec2 pr_texCoord;

        uniform mat4 pr_projectionMatrix;
        uniform float pr_progress;

        varying vec2 v_texCoord;

        void main() {
            if (pr_progress >= -0.5 && pr_progress < 0.5) {
                float angle = -pr_progress * PI;
                float x = pr_position.x * cos(angle);
                float y = pr_position.y;
                float z = pr_position.x * sin(angle);
                gl_Position = pr_projectionMatrix * vec4(x, y, z, 1);
            } else {
                // hide entire plane
                gl_Position.w = 0.0;
            }

            v_texCoord = pr_texCoord;
        }

    ]]></vertex_shader>

    <fragment_shader><![CDATA[
    
        precision mediump float;

        uniform sampler2D pr_texture;
        uniform float pr_progress;

        varying vec2 v_texCoord;

        void main() {
            gl_FragColor = texture2D(pr_texture, v_texCoord);
            if (pr_progress < -0.5 || pr_progress >= 0.5) {
                gl_FragColor.a = 0.0;
            }
        }
    
    ]]></fragment_shader>

</animation>